# Common environment for services
x-common-env: &common-env
  tty: true
  stdin_open: true
  stop_grace_period: 1s

# Services
services:
  realsense: 
    build:
      context: .
      target: realsense  
      args:
        USER: realsense
        LIBREALSENSE_VERSION: 2.56.2
    <<: *common-env
    network_mode: host
    image: vision-main:realsense
    container_name: realsense
    volumes:
      - /dev:/dev
      - $PWD/../ws/realsense-pkg:/home/realsense/vision-ws/src/realsense-ros
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=42
    device_cgroup_rules:
      - "c 81:* rmw"
      - "c 189:* rmw"
    command: bash #bash -ic "colcon build && ros2 launch realsense2_camera rs_launch.py"
  
  aruco:
    build:
      context: .
      target: aruco 
      args:
        USER: aruco
    <<: *common-env
    network_mode: host
    image: vision-main:aruco
    container_name: aruco
    volumes:
      - $PWD/../ws/aruco-pkg:/home/aruco/vision-ws/src/aruco-ros
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=42
    command: bash

  gui:
    build:
      context: .
      target: gui
      args:
        USER: gui
    <<: *common-env
    network_mode: host
    image: vision-main:gui
    container_name: gui
    volumes:
      # X11 socket
      # - /tmp/.X11-unix:/tmp/.X11-unix
      # Wayland socket
      - $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY
    environment:
      - DISPLAY=${DISPLAY}
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=42
    command: bash -ic "rviz2"

  pytorch-training:
    build:
      context: .
      target: pytorch-training
    <<: *common-env
    network_mode: host
    ipc: host
    image: vision-main:pytorch-training
    container_name: pytorch-training
    volumes:
      - $PWD/../train:/root/train
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    shm_size: 6gb
    profiles: ['train']
    command: bash
      # bash -ic 'nvidia-smi && bash'
    
  